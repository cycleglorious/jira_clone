name: Release Trigger

on:
  push:
    tags:
      - "v*"

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create dummy .env for linting
        run: |
          echo "NODE_ENV='development'" > .env
          echo "DATABASE_URL='postgresql://user:pass@host:5432/db'" >> .env
          echo "UPSTASH_REDIS_REST_URL='dummy'" >> .env
          echo "UPSTASH_REDIS_REST_TOKEN='dummy'" >> .env

      - name: Run Linter via Docker
        run: |
          docker build --target lint --tag jira-clone-lint --progress=plain .

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create dummy .env for testing
        run: |
          echo "NODE_ENV='test'" > .env
          echo "DATABASE_URL='postgresql://user:pass@host:5432/db_test'" >> .env
          echo "UPSTASH_REDIS_REST_URL='dummy'" >> .env
          echo "UPSTASH_REDIS_REST_TOKEN='dummy'" >> .env

      - name: Run Tests via Docker
        run: |
          docker build --target test --tag jira-clone-test --progress=plain .

  trigger-codebuild:
    name: Trigger AWS CodeBuild
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::792642165337:role/GitHubAction-AssumeRoleWithAction
          aws-region: eu-north-1


      - name: Run CodeBuild
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: jira-clone
